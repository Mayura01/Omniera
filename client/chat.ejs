<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" href="../assets/logo_O.png" type="image/x-icon">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Pixelify+Sans&display=swap">
    <!-- <link rel="stylesheet" href="./global.css"> -->
    <title>new chat</title>
    <style>
        body {
            font-family: "Roboto", sans-serif;
            margin: 0;
            padding: 0;
            background-color: #12102c;
            display: flex;
            flex-direction: column;
            height: 100vh;
            width: 100vw;
        }

        .header {
            width: 100%;
            height: 10vh;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0 20px;
            background-color: #2C3E50;
            color: white;
            box-sizing: border-box;
        }

        .logo {
            height: 70%;
        }

        .logo img {
            height: 100%;
            object-fit: contain;
        }

        .header .title {
            font-family: "Roboto", sans-serif;
            background: none;
            width: fit-content;
            border: none;
            font-size: 2.3rem;
            text-align: center;
            color: white;
            margin: auto;
            margin-left: 25%;
            font-family: 'Pixelify Sans', sans-serif;
        }

        .settings {
            width: 40px;
            height: 40px;
            border-radius: 7px;
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            position: relative;
            transition: background-color 0.3s ease;
        }

        .settings img{
            height: 100%;
            object-fit: contain;
        }

        .settings-buttton {
            display: none;
            position: absolute;
            top: 60px;
            right: 20px;
            background-color: #2C3E50;
            border: 1px solid #93a0bc;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            width: 150px;
            z-index: 1000;
            padding: 10px 0;
        }

        .settings-buttton.show {
            display: block;
        }

        .settings-buttton button {
            background-color: transparent;
            border: none;
            color: #fff;
            padding: 10px;
            text-align: left;
            width: 100%;
            font-size: 1rem;
            cursor: pointer;
            transition: background-color 0.3s ease;
            font-family: 'Pixelify Sans', sans-serif;
        }

        .settings-buttton button:hover {
            background-color: #3B4D61;
        }

        .chat-container {
            height: 100%;
            font-family: "Roboto", sans-serif;
            display: flex;
            flex-direction: column;
            justify-content: flex-end;
            flex-grow: 1;
            overflow: hidden;
        }

        .chat-box {
            height: 90%;
            width: 70vw;
            margin: auto;
            overflow-y: auto;
            color: white;
            box-sizing: border-box;
            padding-bottom: 1%;
        }

        .chat-box::-webkit-scrollbar {
            display: none;
        }

        .logo_O {
            width: 10%;
            height: 10%;
            margin: auto;
            position: relative;
            top: 45%;
        }

        .logo_O img {
            height: 100%;
            object-fit: contain;
            animation: logo_rotate 5s linear infinite;
        }

        @keyframes logo_rotate {
            from {
                transform: rotate(0);
            }

            to {
                transform: rotate(360deg);
            }
        }

        .chat-box .mp {
            font-size: 3rem;
            text-align: center;
            position: relative;
            top: 45%;
            font-family: "Pixelify Sans", sans-serif;
        }

        .user-message {
            width: fit-content;
            text-align: right;
            padding: 1%;
            border-radius: 10px;
            display: flex;
            font-size: 1.3rem;
        }

        .user-message img {
            width: 25px;
            height: 25px;
            margin: auto;
            margin-right: 20px;
        }



        .ai-message {
            width: fit-content;
            padding: 1%;
            border-radius: 10px;
            display: flex;
            font-size: 1.3rem;
            background-color: #3d566e;
        }

        .ai-message img {
            width: 25px;
            height: 25px;
            margin: auto;
            margin-right: 20px;
        }

        .bot-message {
            background-color: #f4f4f4;
            align-self: flex-start;
        }

        .user-input {
            width: 100%;
            height: 10%;
        }

        #chat-input {
            width: 70vw;
            height: 80%;
            border-radius: 50px;
            display: flex;
            justify-content: space-between;
            background-color: #2C3E50;
            margin: auto;
            box-sizing: border-box;
            padding-left: 2%;
        }

        input[type="text"] {
            width: 70%;
            border: none;
            outline: none;
            color: white;
            font-size: 1.3rem;
            border-radius: 5px;
            background: none;
        }

        .send-btn {
            position: relative;
            width: 10%;
            height: 80%;
            background-color: #7614fe;
            color: white;
            margin: auto 5px;
            font-size: 1rem;
            border: none;
            border-radius: 50px;
            cursor: pointer;
            font-family: 'Pixelify Sans', sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        #animation-container {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            display: none;
            align-items: center;
            justify-content: center;
            background-color: transparent;

        }

        .send-btn:hover {
            background-color: #0056b3;
        }

        .button-content {
            display: flex;
            align-items: center;
        }

        @media (max-width: 768px) {
            .chat-box {
                width: 90vw;
            }

            input[type="text"] {
                width: 60%;
            }

            .send-btn {
                width: 15%;
                font-size: 0.8rem;
            }

            .header .title {
                font-size: 1.5rem;
                margin-right: 20px;
            }

            .logo_O {
                width: 15%;
                height: 15%;
            }
        }

        @media (max-width: 480px) {
            body {
                height: 90vh;
            }

            .header {
                height: 7vh;
                width: 100vw;
            }

            .header .title {
                font-size: 1.3rem;
                width: 70%
            }

            .logo {
                height: 50%;
            }

            .chat-box {
                width: 100vw;
            }

            #chat-input {
                width: 95vw;
                height: 80%;
            }

            input[type="text"] {
                width: 50%;
                font-size: 1rem;
            }

            .send-btn {
                width: 20%;
                font-size: 0.7rem;
            }

            .header .title {
                font-size: 1.2rem;
            }

            .logo_O {
                width: 10%;
                height: 10%;
                top: 25%;
            }

            .chat-box .mp {
                top: 25%;
                font-size: 1.5rem;
            }
        }
    </style>
</head>

<body>

    <div class="header">
        <div class="logo" onclick="window.location = '/'">
            <img src="./../assets/Logo.png" alt="logo">
        </div>
        <input type="text" class="title" id="title" value="New Chat 1" autocomplete="off" readonly="true">
        <div class="settings" id="settings">
            <img src="../assets/settings.png" alt="settings_icon">
        </div>
    </div>
    <div class="settings-buttton" id="settings-buttton">
        <button class="setting-button" id="edit_title" onclick="edit_title()">Edit title</button>
        <button class="setting-button" id="clear-chat" onclick="clear_chat()">Clear chat</button>
        <button class="setting-button" id="go_back" onclick="window.location='/'">Go Back</button>
    </div>

    <div class="chat-container">
        <div class="chat-box" id="chat-box">
            <div class="logo_O" id="logo_O"><img src="../assets/logo_O.png" alt="logo"></div>
            <p id="h2" class="mp">Hello I'm <span><img src="../assets/logo_name.png"></span>, How can I help you today?
            </p>
        </div>
        <div class="user-input">
            <form id="chat-input">
                <input type="text" id="user_input" placeholder="Type your message..." autocomplete="off">
                <button class="send-btn" type="submit">
                    <div id="buttonContent">Generate</div>
                    <div id="animation-container"></div>
                </button>
            </form>
        </div>

    </div>

</body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bodymovin/5.7.8/lottie.min.js"></script>
<script>
    const chatBox = document.getElementById('chat-box');
    const form = document.getElementById('chat-input');
    const user_input = document.getElementById('user_input');
    const chat_title = document.getElementById('title');
    const buttonContent = document.getElementById('buttonContent');
    const animationContainer = document.getElementById('animation-container');
    const session = "<%= session %>";

    function loadAnimation() {
        animationContainer.style.display = 'flex';
        return lottie.loadAnimation({
            container: animationContainer,
            renderer: 'svg',
            loop: true,
            autoplay: true,
            path: "../assets/generate-animation.json"
        });
    }
    const settingsButton = document.getElementById('settings');
    const settingsDropdown = document.getElementById('settings-buttton');

    function settingButtonClickHandler() {
        if (settingsDropdown.classList.contains('expand-again')) {
            settingsDropdown.classList.remove('expand-again');
            settingsDropdown.classList.remove('show');
        } else {
            settingsDropdown.classList.add('expand-again');
            settingsDropdown.classList.add('show');
            console.log("hello");
        }
    }

    settingsButton.addEventListener('click', settingButtonClickHandler);

    function edit_title() {
        const title = document.getElementById('title');
        title.setAttribute.readonly = false;
    }


    form.addEventListener('submit', function (event) {
        event.preventDefault();

        const userMessage = user_input.value.trim();
        if (!userMessage) {
            alert('Message cannot be empty. Please type something.');
            return;
        }
        const logo_O = document.getElementById('logo_O');
        const h2 = document.getElementById('h2');
        if (h2 && logo_O) {
            h2.style.display = 'none';
            logo_O.style.display = 'none';
        }
        buttonContent.style.display = 'none';
        const animationInstance = loadAnimation();
        handleFormSubmit(animationInstance);
    });

    if (session) {
        loadChatHistory();
    }

    function loadChatHistory() {
        fetch('/chat/get_chat_history', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ session })
        })
            .then(response => response.json())
            .then(data => {
                const h2 = document.getElementById('h2');
                const logo_O = document.getElementById('logo_O');
                if (data.status === 'notFound') {
                    return;
                }

                chat_title.value = data.title;
                chatBox.innerHTML = '';

                if (data.history && data.history.length > 0) {
                    data.history.forEach(chat => {
                        appendMessage('user', chat.prompt);
                        appendMessage('ai', chat.response);
                    });
                } else {
                    h2.style.display = 'block';
                    logo_O.style.display = 'block';
                }
            })
            .catch(error => {
                console.error('Error fetching chat history:', error);
            });
    }

    function handleFormSubmit(animationInstance) {
        const prompt = user_input.value.trim();
        const title = chat_title.value;

        const urlSegments = window.location.pathname.split('/');
        const chatSession = urlSegments[urlSegments.length - 1] || null;

        if (prompt) {
            const formData = new FormData();
            formData.append('conversationTitle', title);
            formData.append('prompt', prompt);
            if (chatSession != 'chat') {
                formData.append('chatSessionId', chatSession);
            }
            else {
                formData.append('chatSessionId', '');
            }

            appendMessage('user', prompt);
            sendPrompt(formData, animationInstance);

            user_input.value = '';
        } else {
            console.error('Prompt is empty!');
        }
    }



    function appendMessageWordByWord(sender, message) {
        const messageElement = document.createElement('div');
        messageElement.classList.add(sender + '-message');

        if (sender === 'ai') {
            const aiIcon = document.createElement('img');
            aiIcon.src = "../assets/logo_O.png";
            aiIcon.classList.add('ai-icon');
            messageElement.appendChild(aiIcon);
        }

        const p = document.createElement('p');
        messageElement.appendChild(p);
        chatBox.appendChild(messageElement);

        const words = message.split(' ');
        let wordIndex = 0;

        const intervalId = setInterval(() => {
            if (wordIndex < words.length) {
                p.innerHTML += words[wordIndex] + ' ';
                wordIndex++;
                chatBox.scrollTop = chatBox.scrollHeight;
            } else {
                clearInterval(intervalId);
            }
        }, 100);
    }


    function sendPrompt(formData, animationInstance) {
        const xhr = new XMLHttpRequest();
        xhr.open('POST', 'http://localhost:3000/chat/ai-response/');

        xhr.onload = function () {
            if (xhr.status === 200) {
                const response = JSON.parse(xhr.responseText);
                appendMessageWordByWord('ai', response.response);

                if (!window.location.pathname.includes(response.sessionId)) {
                    const newUrl = `/chat/${response.sessionId}`;
                    window.history.replaceState({ path: newUrl }, '', newUrl);
                }
            } else {
                console.error('Request failed. Status:', xhr.status);
                alert('Failed to get a response. Please try again.');
            }

            animationInstance.stop();
            animationInstance.destroy();
            animationContainer.style.display = 'none';
            buttonContent.style.display = 'flex';
        };

        xhr.onerror = function () {
            console.error('Network error. Unable to reach the server.');
            alert('Network error. Please check your connection.');

            animationInstance.stop();
            animationInstance.destroy();
            animationContainer.style.display = 'none';
            buttonContent.style.display = 'flex';
        };

        xhr.send(formData);
    }


    function appendMessage(sender, message) {
        const messageElement = document.createElement('div');
        messageElement.classList.add(sender + '-message');

        const userIcon = document.createElement('img');
        const messageText = document.createElement('p');
        messageText.textContent = message;

        if (sender == 'user') {
            userIcon.src = "../assets/user.png";
            userIcon.classList.add('user-icon');
        } else {
            userIcon.src = "../assets/logo_O.png";
            userIcon.classList.add('ai-icon');
        }

        messageElement.appendChild(userIcon);
        messageElement.appendChild(messageText);
        // const hrElement = document.createElement('hr');
        chatBox.appendChild(messageElement);
        // chatBox.appendChild(hrElement);
        chatBox.scrollTop = chatBox.scrollHeight;
    }


    chat_title.addEventListener('blur', () => {
        const newTitle = chat_title.value.trim();

        if (newTitle) {
            const sessionId = window.location.pathname.split('/').pop();
            updateChatTitle(sessionId, newTitle);
        } else {
            alert('Title cannot be empty.');
        }
    });

    function updateChatTitle(sessionId, newTitle) {
        fetch('http://localhost:3000/chat/update-title', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                sessionId: sessionId,
                newTitle: newTitle
            })
        })
            .then(response => {
                if (!response.ok) {
                    console.error('Failed to update title');
                }
            })
            .catch(error => {
                console.error('Error updating title:', error);
            });
    }
</script>

</html>